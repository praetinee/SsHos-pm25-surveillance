import plotly.express as px
import plotly.graph_objs as go
from plotly.subplots import make_subplots
import pandas as pd
import streamlit as st

def plot_patient_vs_pm25(df_pat, df_pm):
    """Generates and displays a combination chart of patient counts vs PM2.5 levels."""
    st.subheader("üìä ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ 4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ PM2.5")

    if "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô" not in df_pat.columns or "4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á" not in df_pat.columns:
        st.warning("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≤‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô' ‡∏´‡∏£‡∏∑‡∏≠ '4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á'")
        return

    agg = df_pat.groupby(["‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á"]).size().reset_index(name="count")

    fig = make_subplots(specs=[[{"secondary_y": True}]])

    # Add patient data (Plotting logic for patients remains the same)
    for grp in sorted(agg["4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á"].unique()):
        d2 = agg[agg["4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á"] == grp]
        fig.add_trace(
            go.Scatter(x=d2["‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"], y=d2["count"], name=f"‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ {grp}", mode="lines+markers"),
            secondary_y=False
        )

    # FIX: Improved logic to ensure all PM2.5 data is shown
    # It now considers all months from both patient and PM2.5 datasets.
    if not df_pm.empty and all(col in df_pm.columns for col in ["‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "PM2.5 (ug/m3)"]):
        # Step 1: Get all unique months from BOTH datasets to create a complete timeline.
        patient_months = agg['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'].unique()
        pm25_months = df_pm['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'].unique()
        all_months_list = sorted(list(set(list(patient_months) + list(pm25_months))))
        all_months_df = pd.DataFrame({'‡πÄ‡∏î‡∏∑‡∏≠‡∏ô': all_months_list})

        # Step 2: Merge PM2.5 data onto this complete timeline.
        df_merged_pm = pd.merge(all_months_df, df_pm, on="‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", how="left")

        # Step 3: Plot the PM2.5 line using the new, complete merged data.
        fig.add_trace(
            go.Scatter(x=df_merged_pm["‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"], y=df_merged_pm["PM2.5 (ug/m3)"], name="PM2.5 (ug/m3)", line=dict(color="black", dash="dash")),
            secondary_y=True
        )
        fig.update_yaxes(title_text="PM2.5 (ug/m3)", secondary_y=True)
    else:
        st.info("‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PM2.5 ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô")

    fig.update_layout(
        title_text="‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ 4 ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ PM2.5",
        legend_title_text="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
    )
    fig.update_yaxes(title_text="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ (‡∏Ñ‡∏ô)", secondary_y=False)
    st.plotly_chart(fig, use_container_width=True)


def plot_vulnerable_pie(df, month_filter):
    """Generates and displays a pie chart of vulnerable groups."""
    st.subheader("üë• ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á")

    if "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á" in df.columns:
        if df["‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á"].dropna().empty:
            st.info("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
            return
            
        sp = df["‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á"].value_counts().reset_index()
        sp.columns = ["‡∏Å‡∏•‡∏∏‡πà‡∏°", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"]
        title = f"‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: {month_filter})"
        fig = px.pie(sp, values="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", names="‡∏Å‡∏•‡∏∏‡πà‡∏°", title=title)
        st.plotly_chart(fig, use_container_width=True)
    else:
        st.info("‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå '‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á' ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

