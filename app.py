import streamlit as st
import pandas as pd
import plotly.express as px

# =============================
# üîπ CONFIG
# =============================
SHEET_URL = 'https://docs.google.com/spreadsheets/d/1vvQ8YLChHXvCowQQzcKIeV4PWt0CCt76f5Sj3fNTOV0/export?format=csv&id=1vvQ8YLChHXvCowQQzcKIeV4PWt0CCt76f5Sj3fNTOV0&gid=795124395'

st.set_page_config(page_title="PM2.5 Dashboard", layout="wide")

# =============================
# üîπ LOAD DATA
# =============================
@st.cache_data
def load_data():
    df = pd.read_csv(SHEET_URL)
    df.columns = df.columns.str.strip()

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô datetime
    if '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£' in df.columns:
        df['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'] = pd.to_datetime(df['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'], errors='coerce', dayfirst=True)
        df['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'] = df['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'].dt.to_period('M').astype(str)

    return df

df = load_data()

st.title('üìä ‡∏Å‡∏≤‡∏£‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏à‡∏≤‡∏Å PM2.5 ‡πÉ‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏™‡∏±‡∏ô‡∏ó‡∏£‡∏≤‡∏¢')

# =============================
# üîπ FILTER SIDEBAR
# =============================
with st.sidebar:
    st.header('üîç ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•')

    province_list = ['‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'] + sorted(df['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'].dropna().unique().tolist()) if '‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î' in df.columns else []
    amphoe_list = ['‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'] + sorted(df['‡∏≠‡∏≥‡πÄ‡∏†‡∏≠'].dropna().unique().tolist()) if '‡∏≠‡∏≥‡πÄ‡∏†‡∏≠' in df.columns else []
    tambon_list = ['‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'] + sorted(df['‡∏ï‡∏≥‡∏ö‡∏•'].dropna().unique().tolist()) if '‡∏ï‡∏≥‡∏ö‡∏•' in df.columns else []
    gender_list = ['‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'] + sorted(df['‡πÄ‡∏û‡∏®'].dropna().unique().tolist()) if '‡πÄ‡∏û‡∏®' in df.columns else []

    province = st.selectbox('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', province_list)
    amphoe = st.selectbox('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠', amphoe_list)
    tambon = st.selectbox('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡∏ö‡∏•', tambon_list)
    gender = st.selectbox('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®', gender_list)

# ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
filtered_df = df.copy()
if province != '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' and '‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î' in df.columns:
    filtered_df = filtered_df[filtered_df['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î'] == province]
if amphoe != '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' and '‡∏≠‡∏≥‡πÄ‡∏†‡∏≠' in df.columns:
    filtered_df = filtered_df[filtered_df['‡∏≠‡∏≥‡πÄ‡∏†‡∏≠'] == amphoe]
if tambon != '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' and '‡∏ï‡∏≥‡∏ö‡∏•' in df.columns:
    filtered_df = filtered_df[filtered_df['‡∏ï‡∏≥‡∏ö‡∏•'] == tambon]
if gender != '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' and '‡πÄ‡∏û‡∏®' in df.columns:
    filtered_df = filtered_df[filtered_df['‡πÄ‡∏û‡∏®'] == gender]

# =============================
# üîπ VISUALIZATION 1: ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
# =============================
if '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô' in filtered_df.columns:
    st.subheader('üìà ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô')
    month_df = filtered_df.groupby('‡πÄ‡∏î‡∏∑‡∏≠‡∏ô').size().reset_index(name='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢')
    line_fig = px.line(
        month_df,
        x='‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
        y='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢',
        markers=True,
        title='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'
    )
    st.plotly_chart(line_fig, use_container_width=True)

# =============================
# üîπ VISUALIZATION 2: ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏£‡∏≤‡∏¢‡∏ï‡∏≥‡∏ö‡∏•
# =============================
if '‡∏ï‡∏≥‡∏ö‡∏•' in filtered_df.columns:
    st.subheader('üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≥‡∏ö‡∏• (Top 10)')
    sub_df = (
        filtered_df.groupby('‡∏ï‡∏≥‡∏ö‡∏•')
        .size()
        .reset_index(name='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢')
        .sort_values('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢', ascending=False)
    )
    bar_fig = px.bar(sub_df.head(10), x='‡∏ï‡∏≥‡∏ö‡∏•', y='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢', text='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢', title='Top 10 ‡∏ï‡∏≥‡∏ö‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î')
    bar_fig.update_traces(textposition='outside')
    st.plotly_chart(bar_fig, use_container_width=True)

# =============================
# üîπ VISUALIZATION 3: ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
# =============================
if '‡πÄ‡∏û‡∏®' in filtered_df.columns:
    st.subheader('üßç‚Äç‚ôÄÔ∏è ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ï‡∏≤‡∏°‡πÄ‡∏û‡∏®')
    pie_df = filtered_df['‡πÄ‡∏û‡∏®'].value_counts().reset_index()
    pie_df.columns = ['‡πÄ‡∏û‡∏®', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']
    pie_fig = px.pie(pie_df, values='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', names='‡πÄ‡∏û‡∏®', title='‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢', hole=0.3)
    st.plotly_chart(pie_fig, use_container_width=True)

# =============================
# üîπ VISUALIZATION 4: ‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
# =============================
if '‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏±‡∏Å' in filtered_df.columns:
    st.subheader('ü©∫ 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î')
    disease_df = (
        filtered_df['‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏±‡∏Å']
        .value_counts()
        .reset_index()
        .rename(columns={'index': '‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏±‡∏Å', '‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏±‡∏Å': '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'})
        .head(10)
    )
    disease_fig = px.bar(disease_df, x='‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏±‡∏Å', y='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', text='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', title='10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î')
    disease_fig.update_traces(textposition='outside')
    st.plotly_chart(disease_fig, use_container_width=True)

# =============================
# üîπ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö
# =============================
st.subheader('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö')
st.dataframe(filtered_df, use_container_width=True)

st.caption('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet: PM2.5 Surveillance Dashboard | ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥')
